{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44ray\\\\WebstormProjects\\\\grh-frontend\\\\src\\\\components\\\\DocumentManagement\\\\UploadDocument.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Input, FormGroup, Label, Form } from 'reactstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadDocument = _ref => {\n  _s();\n  let {\n    userId,\n    onUploadSuccess\n  } = _ref;\n  const [file, setFile] = useState(null);\n  const [filename, setFilename] = useState('');\n  const [description, setDescription] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFilenameChange = e => {\n    setFilename(e.target.value);\n  };\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file || !filename || !description) {\n      alert('Please provide all required fields');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('filename', filename);\n    formData.append('description', description);\n    try {\n      await axios.post(\"/api/documents/upload/\".concat(userId), formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Document uploaded successfully');\n      if (onUploadSuccess) onUploadSuccess(); // Trigger the refresh\n    } catch (error) {\n      console.error('Error uploading document', error);\n      alert('Failed to upload document');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"file\",\n        children: \"Choose Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        id: \"file\",\n        name: \"file\",\n        onChange: handleFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"filename\",\n        children: \"Document Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"filename\",\n        value: filename,\n        onChange: handleFilenameChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"textarea\",\n        id: \"description\",\n        value: description,\n        onChange: handleDescriptionChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadDocument, \"ZxndGvYo3yQl8sWAWmRO95yioLo=\");\n_c = UploadDocument;\nexport default UploadDocument;\nvar _c;\n$RefreshReg$(_c, \"UploadDocument\");","map":{"version":3,"names":["React","useState","Button","Input","FormGroup","Label","Form","axios","jsxDEV","_jsxDEV","UploadDocument","_ref","_s","userId","onUploadSuccess","file","setFile","filename","setFilename","description","setDescription","handleFileChange","e","target","files","handleFilenameChange","value","handleDescriptionChange","handleSubmit","preventDefault","alert","formData","FormData","append","post","concat","headers","error","console","onSubmit","children","for","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","onChange","required","color","_c","$RefreshReg$"],"sources":["C:/Users/44ray/WebstormProjects/grh-frontend/src/components/DocumentManagement/UploadDocument.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Input, FormGroup, Label, Form } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nconst UploadDocument = ({ userId, onUploadSuccess }) => {\r\n    const [file, setFile] = useState(null);\r\n    const [filename, setFilename] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleFilenameChange = (e) => {\r\n        setFilename(e.target.value);\r\n    };\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!file || !filename || !description) {\r\n            alert('Please provide all required fields');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('filename', filename);\r\n        formData.append('description', description);\r\n\r\n        try {\r\n            await axios.post(`/api/documents/upload/${userId}`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            alert('Document uploaded successfully');\r\n            if (onUploadSuccess) onUploadSuccess(); // Trigger the refresh\r\n        } catch (error) {\r\n            console.error('Error uploading document', error);\r\n            alert('Failed to upload document');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <Label for=\"file\">Choose Document</Label>\r\n                <Input\r\n                    type=\"file\"\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    onChange={handleFileChange}\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"filename\">Document Name</Label>\r\n                <Input\r\n                    type=\"text\"\r\n                    id=\"filename\"\r\n                    value={filename}\r\n                    onChange={handleFilenameChange}\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"description\">Description</Label>\r\n                <Input\r\n                    type=\"textarea\"\r\n                    id=\"description\"\r\n                    value={description}\r\n                    onChange={handleDescriptionChange}\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <Button color=\"primary\" type=\"submit\">Upload</Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default UploadDocument;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}